You'll need the following code to align your labels nicely.

.attr("text-anchor", function(d) {
	if(d.startAngle > Math.PI) {
	  return "end"
	} else {
	  return "start"
	}
})














SETUP: You'll need a d3.arc() and you'll need a d3.pie().




















SETUP: WHen you make a pie, it's good practice to do add .sort(null) onto your pie to keep it from resorting your data (unless you want it to).

  var pie = d3.pie()
    .sort(null)






SVG ELEMENT TYPE: If a circle is a circle and a text is a text, what are shapes? They aren't 'shape'!
























BINDING DATA: Do you need just one path or multiple paths? Does that change how you bind your data?


























DATA: Are you just going to bind your data with .data(datapoints) or does something ELSE need to happen with your data in there?


















COLORS 1: You'll also need a color scale, of course. You'll probably use a scaleOrdinal(), and you'll only need to specify the output colors, not the input values. colorbrewer2.org has some nice colors.























COLORS: If you can't figure out color, try console.log(d) to remind yourself what data looks like when you're making a pie graph. 





















MAKING WEDGES: What's d for? What do you feed d?






















LABELS: They can't use your arc, they need to go in a bigger one that is just outside of it. They sit in the CENTROID of the arc, which looks like this:

https://raw.githubusercontent.com/d3/d3-shape/master/img/centroid-annular-sector.png

Even though your code is a bit different, take a look at

https://bl.ocks.org/mbostock/3887235

for inspiration

























